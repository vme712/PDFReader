# Generated by Django 3.1.2 on 2022-03-25 02:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('FilesApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContestModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Удален')),
                ('name', models.TextField(verbose_name='Название конкурса')),
                ('link', models.TextField(verbose_name='Ссылка на конкурс')),
            ],
            options={
                'verbose_name': 'Конкурс',
                'verbose_name_plural': 'Конкурсы',
            },
        ),
        migrations.CreateModel(
            name='ContestResultConfigModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Удален')),
                ('is_check', models.BooleanField(default=False, verbose_name='Статус проверки конфига')),
                ('identifier', models.CharField(choices=[('inn', 'ИНН'), ('ogrn', 'ОГРН'), ('sum_pay', 'Призовая сумма'), ('request_sum_pay', 'Запрашиваемая сумма'), ('ball', 'Баллы')], max_length=15, verbose_name='На основе какого поля производить проверку при переносах строки на новую страницу')),
                ('page_start', models.PositiveSmallIntegerField(verbose_name='Номер страницы в документе с которой нужно распознавать')),
                ('page_end', models.PositiveSmallIntegerField(verbose_name='Номер страницы в документе до которой нужно распознавать')),
                ('is_winner_table', models.BooleanField(verbose_name='Статус данного фрагмента таблицы, победитель ли тут')),
                ('direction_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с направлением')),
                ('org_name_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с названием организации')),
                ('project_name_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с названием проекта')),
                ('ball_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с баллами')),
                ('request_sum_pay_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с запрашиваемой суммой')),
                ('inn_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с ИНН')),
                ('ogrn_col_num', models.PositiveSmallIntegerField(default=None, null=True, verbose_name='Номер столбца с ОГРН')),
            ],
            options={
                'verbose_name': 'Настройка для распознания результата конкурса',
                'verbose_name_plural': 'Настройки для распознания результата конкурса',
            },
        ),
        migrations.CreateModel(
            name='ContestResultModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Удален')),
                ('is_draft', models.BooleanField(default=True, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Результат конкурса',
                'verbose_name_plural': 'Результаты конкурса',
            },
        ),
        migrations.CreateModel(
            name='ResultModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Удален')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Статус проверки')),
                ('is_download', models.BooleanField(default=False, verbose_name='Статус выгрузки')),
                ('page', models.CharField(max_length=255, verbose_name='Страница')),
                ('inn', models.CharField(default='', max_length=255, null=True, verbose_name='ИНН')),
                ('ogrn', models.CharField(default='', max_length=255, null=True, verbose_name='ОГРН')),
                ('sum_pay', models.CharField(default='', max_length=255, null=True, verbose_name='Сумма выплаты')),
                ('request_sum_pay', models.CharField(default='', max_length=255, null=True, verbose_name='Запрашиваемая сумма')),
                ('ball', models.CharField(default='', max_length=255, null=True, verbose_name='Балл')),
                ('direction', models.TextField(default='', null=True, verbose_name='Направление')),
                ('org_name', models.TextField(default='', null=True, verbose_name='Название организации')),
                ('project_name', models.TextField(default='', null=True, verbose_name='Название проекта')),
                ('is_winner', models.BooleanField(default=True, verbose_name='Победитель')),
                ('contest_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ContestApp.contestresultmodel', verbose_name='Результаты конкурса')),
                ('file_row', models.ManyToManyField(to='FilesApp.FileModel', verbose_name='Файлы строк')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
            },
        ),
    ]
